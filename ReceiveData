#include <SPI.h> 
#include <Ethernet.h>  //调用网络模块库
#include <Wire.h>  //调用I2C通讯库
#include <math.h>
byte buff[2];  
char flag =0;  //Led
#define APIKEY         "93a762111369510362d7cbd301d9da9f"
#define DEVICEID       4929
#define DEVICEIDAir       5393
#define SENSORnoAir       10036
String SENSORno[]={"7551","7553","7554","7555","7556","7557","7558"}; 
//for led pin
 byte ledPin[]={22,23,24,25,26,27,28}; 
 byte mac[] = { 0x00, 0x1D, 0x72, 0x82, 0x35, 0x9D};
 EthernetClient client;
 char server[] = "api.yeelink.net";   // name address for yeelink API
 unsigned long lastConnectionTime = 0;          // last time you connected to the server, in milliseconds
 boolean lastConnected = false;                 // state of the connection last time through the main loop
 const unsigned long postingInterval = 30*1000; // delay between 2 datapoints, 30s
 String returnValue = ""; 
 boolean ResponseBegin = false;
 byte c[21];
 int sum=0;
 int num=0;
 int temp=0;
 void setup() 
 {
     Wire.begin();
     Serial.begin(9600);
     Serial3.begin(9600);
     if (Ethernet.begin(mac) == 0) 
     {
      Serial.println("Failed to configure Ethernet using DHCP");
      }
      else 
     {
       Serial.println("Ethernet configuration OK");
      }
 }
 void loop() 
 {
    switch(num)
   {
       case 0:
             Temperature(); 
             delay(1000);
             break;
        case 1:  
             AirConditioningtest() ;
             delay(1000);  
             break;
        case 2: 
             AirConditioningtest() ;
             ledtest();  
             delay(1000);
             break;
          default:
                break;            
   }
    num++;
    if(num>=3)
    num=0; 
   
 }     
 void Temperature()
 {        
           int i=0;
           byte checknum=0;
           unsigned long time=millis();
           if (!client.connected() && lastConnected)
           {
            client.stop();
           }
             while(1)
             if(Serial3.available()>0)
              {  
                 c[i]=Serial3.read();     
                 if(i==0&&c[i]!=0x7e)
                 i=-1;
                 if(i==1&&c[i]!=0)
                 i=-1;
                 if(i==2&&c[i]!=0x11)
                 i=-1;
                 Serial.print(c[i],HEX); 
                 Serial.print(" ");
                 i++;
                 if(i==21)          
              break;
            }
             Serial.println("nihao"); 
             Serial.println();
             for(int i=3;i<=19;i++)
             checknum+=c[i];       
             checknum=0xff-checknum;
             if(checknum==c[20])
                  {  
                    Serial.println("Temperature");
                    Serial.println(c[15]);
                    if(c[15]>0)
                    {
                       postData(c[15],8341);
                       delay(3000);
                       postData(c[15],8341);
                       delay(1000);
                    }
                   Serial.println("Humidity");
                   Serial.println(c[16]);
                   postData(c[16],8342);
                   delay(1000); 
                   Serial.println("Light:");
                   Serial.println(c[17]);
                   postData(c[17],23386);
                   delay(3000);
                   postData(c[17],23386);
                   delay(1000);
                   if((c[18]*100+c[19])!=0)
                   {
                     Serial.println("Concention:");
                     Serial.println(c[18]*100+c[19]);
                     postData(c[18]*100+c[19],23400);
                   }
                  }
           
            lastConnected = client.connected();
            delay(300);
 }
 //Air temperature set
     void  AirConditioningtest()
   {
         while(1)
      {
         if (client.available()>0) 
         {
           char d = client.read();
           if (d == '{')
           ResponseBegin = true;
           else if (d == '}')
           ResponseBegin = false;
            if (ResponseBegin)
            returnValue += d;   
          }
          
           if (returnValue.length() !=0 && (ResponseBegin == false))      
            { 
              temp=returnValue.charAt(returnValue.length() - 1);
              Serial.println("Wodeshuju:");
              Serial.println(temp);
            }
           returnValue = "";
           break;
         if (!client.connected() && lastConnected) 
         {
           client.stop();
         }
         if(!client.connected() && (millis() - lastConnectionTime > 3000)) 
        {
    
           Serial.print("yeelink:");
           getDataAir ();  
           lastConnectionTime = millis();
         }
     lastConnected = client.connected();
      }
   }
 void ledtest()
 { 
      while(1)
      {
         if (client.available()>0) 
         {
           char d = client.read();
           if (d == '{')
           ResponseBegin = true;
           else if (d == '}')
           ResponseBegin = false;
            if (ResponseBegin)
            returnValue += d;   
          }
          if (returnValue.length() !=0 && (ResponseBegin == false))
         {    
            if (returnValue.charAt(returnValue.length() - 1) == '1') 
           {
            led( ledPin[flag], HIGH);
           } 
           else if(returnValue.charAt(returnValue.length() - 1) == '0')
           {
             led( ledPin[flag], LOW);
            }
        returnValue = "";
        flag ++;
            break;
         }
   if (!client.connected() && lastConnected) 
   {
     client.stop();
   }
   if(!client.connected() && (millis() - lastConnectionTime > 3000)) 
   {
    
     Serial.print("yeelink:");
      if (flag<7)  // 7改成开关数量
      {
        getData();   
       }
      else
    {
     if(flag=7) {flag =0;}   // 7改成开关数量
    }
     lastConnectionTime = millis();
   }
     lastConnected = client.connected();
   
      }
 }
  int led(int y,int t)
{
    int e=y;
    int f=t;
    byte b[21]={0x7E,0x00,0x00,0x10,0x00};
    byte a[15]={0x00,0x13,0xA2,0x00,0x40,0xA6,0x1D,0x4B,0x59,0x23,0x00,0x00};
         a[12]=e;
         a[13]=f;
         a[14]=14;
       Serial.println("WEISHU:");
       Serial.println(e);
       Serial.println("zhuangtai:");
       Serial.println(f);
    byte checknum=0;  
    for(int i=5;i<=19;i++)
     {
        b[i]=a[i-5];
     } 
       checknum+=0x10+0x00;      
       for(int i=0;i<15;i++)  
       checknum+=a[i];       
       checknum=0xff-checknum;
       b[20]=checknum;
       uint8_t msbLen=((15+2)>>8) & 0xff;
       uint8_t lsbLen=(15+2) & 0xff;
       b[1]=msbLen;
       b[2]=lsbLen;
       Serial.println("NIHAO:");
       Serial.println(temp);
       for(int i=0;i<21;i++)  
      {  
        Serial3.write(b[i]);    
        Serial.print(b[i],HEX); 
       }
}
 void getData(void) 
 {
    if (client.connect(server, 80)) 
    {
     Serial.println("connecting...");
     client.print("GET /v1.0/device/");
     client.print(DEVICEID);
     client.print("/sensor/");
     client.print(SENSORno[flag]);
     client.print("/datapoints");
     client.println(" HTTP/1.1");
     client.println("Host: api.yeelink.net");
     client.print("Accept: *");
     client.print("/");
     client.println("*");
     client.print("U-ApiKey: ");
     client.println(APIKEY);
     client.println("Content-Length: 0");
     client.println("Connection: close");
     client.println(); 
      }
   else 
    {
     Serial.println("connection failed");
     Serial.println();
     Serial.println("disconnecting.");
     client.stop();
     }
   lastConnectionTime = millis();
 }  
 
  void getDataAir(void) 
 {
    if (client.connect(server, 80)) 
    {
     Serial.println("connecting...");
     client.print("GET /v1.0/device/");
     client.print(DEVICEIDAir);
     client.print("/sensor/");
     client.print(SENSORnoAir);
     client.print("/datapoints");
     client.println(" HTTP/1.1");
     client.println("Host: api.yeelink.net");
     client.print("Accept: *");
     client.print("/");
     client.println("*");
     client.print("U-ApiKey: ");
     client.println(APIKEY);
     client.println("Content-Length: 0");
     client.println("Connection: close");
     client.println(); 
      }
   else 
    {
     Serial.println("connection failed");
     Serial.println();
     Serial.println("disconnecting.");
     client.stop();
     }
   lastConnectionTime = millis();
 }  
 void postData(int thisData,int SENSORID)
{
  if (client.connect(server, 80)) 
  {
    Serial.println("connecting...");
    client.print("POST /v1.0/device/");
    client.print(5393);
    client.print("/sensor/");
    client.print(SENSORID);
    client.print("/datapoints");
    client.println(" HTTP/1.1");
    client.println("Host: api.yeelink.net");
    client.print("Accept: *");
    client.print("/");
    client.println("*");
    client.print("U-ApiKey: ");
    client.println(APIKEY);
    client.print("Content-Length: ");
    int thisLength = 10 + getLength(thisData);
    client.println(thisLength);
    client.println("Content-Type: application/x-www-form-urlencoded");
    client.println("Connection: close");
    client.println();
    client.print("{\"value\":");
    client.print(thisData);
    client.println("}");
  }
  
  else 
  {
   Serial.println("connection failed");
   Serial.println();
   Serial.println("disconnecting.");
   client.stop();
  }
  
}
int getLength(int someValue) 
{
    int digits = 1;
    int dividend = someValue /10;
    while (dividend > 0)
    {
      dividend = dividend /10;
      digits++;
    }
   return digits;
}

